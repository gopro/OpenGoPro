Camera on the Home Network
**************************

Some cameras support Camera On the Home Network (COHN). This capability allows the client to perform command and control
with the camera indirectly through an access point such as a router at home. For security purposes, all communications
are performed over HTTPS.

================= =========
Camera            Supported
================= =========
Hero12 Black      ✔
Hero11 Black Mini ❌
Hero11 Black      ❌
Hero10 Black      ❌
Hero9 Black       ❌
================= =========

Certificates
============

Secure communication with the camera over HTTPS requires two things: a trusted
`SSL/TLS <https://www.digicert.com/faq/public-trust-and-certificates/what-is-ssl>`_  certificate and Basic auth
username/password used in the HTTPS header.

A provisioned camera has two certificates:

- A Root CA cert provided to the client, which has a 1 year lifespan
- A Camera cert, which contains the camera's current IP address on the local network and is signed by the Root CA cert

This use of a  `certificate chain <https://knowledge.digicert.com/solution/SO16297.html>`_ allows the camera's IP
address to change (e.g. when DHCP lease expires or when access point is reset/replaced) without the client needing to
download and install/trust a new certificate.

Verifying Certificate
---------------------

The camera acts as the Root Certificate Authority in creating the COHN certificate (Root CA cert). Clients can verify
that the certificate is valid using utilities such as openssl:

.. code-block:: shell

    $ openssl verify -CAfile '/path/to/GoProRootCA.crt' '/path/to/GoProRootCA.crt'
    GoProRootCA.crt: OK

View Certificate Details
------------------------

Most operating systems have utilities to view details about a SSL/TLS certificate:

- MacOS: Right-mouse-click >> Quick Look
- Windows: Right-mouse-click >> Properties
- Ubuntu: Right-mouse-click >> Open with View File
- `OpenSSL <https://www.openssl.org/>`_ : openssl x509 -in /path/to/GoProRootCA.crt -noout -text

Provisioning Procedure
======================

In order to use the COHN capability, the camera must first be provisioned for COHN. At a high level, the provisioning process
is as follows:

1. Instruct the GoPro to :operation:ref:`Create COHN Certificate`
2. Use :operation:ref:`Get COHN Certificate` to get the created COHN certificate
3. Use :operation:ref:`Get COHN Status` to get the Basic auth credentials
4. Connect the camera to an :doc:`access point<access_points>`

.. tip:: Depending on the use case, some of these steps can be performed via `HTTP <https://gopro.github.io/OpenGoPro/http#tag/COHN>`_

.. image:: ../../assets/images/plantuml_ble_cohn_provision.png

Once the camera is provisioned, the client can communicate with the camera via HTTPS. The camera supports nearly all
functionality over HTTPS that it does over HTTP. For more details about HTTP/HTTPS, see the
Open GoPro `HTTP specification <https://gopro.github.io/OpenGoPro/http>`_.

Operations
==========

.. operation:protobuf:: Clear COHN Certificate
    :operation-id: GPCAMERA_CLEAR_HOME_NETWORK_CERT
    :external:

    .. operation:protobuf-message:: request
        :feature-id: 0xF1
        :action-id: 0x66
        :uuid: Command
        :message: WSDK_RequestClearCOHNCert

    .. operation:protobuf-message:: response
        :feature-id: 0xF1
        :action-id: 0xE6
        :uuid: Command Response
        :message: ResponseGeneric

.. operation:protobuf:: Create COHN Certificate
    :operation-id: GPCAMERA_CREATE_HOME_NETWORK_CERT
    :external:

    .. operation:protobuf-message:: request
        :feature-id: 0xF1
        :action-id: 0x67
        :uuid: Command
        :message: WSDK_RequestCreateCOHNCert

    .. operation:protobuf-message:: response
        :feature-id: 0xF1
        :action-id: 0xE7
        :uuid: Command Response
        :message: ResponseGeneric

.. operation:protobuf:: Get COHN Certificate
    :operation-id: GPCAMERA_GET_HOME_NETWORK_CERT
    :external:

    .. operation:protobuf-message:: request
        :feature-id: 0xF5
        :action-id: 0x6E
        :uuid: Query
        :message: WSDK_RequestCOHNCert

    .. operation:protobuf-message:: response
        :feature-id: 0xF5
        :action-id: 0xEE
        :uuid: Query Response
        :message: WSDK_ResponseCOHNCert

.. operation:protobuf:: Get COHN Status
    :operation-id: GPCAMERA_GET_HOME_NETWORK_STATUS
    :external:

    .. operation:protobuf-message:: request
        :feature-id: 0xF5
        :action-id: 0x6F
        :uuid: Query
        :message: WSDK_RequestGetCOHNStatus

    .. operation:protobuf-message:: response
        :feature-id: 0xF5
        :action-id: 0xEF
        :uuid: Query Response
        :message: WSDK_NotifyCOHNStatus

    .. operation:protobuf-message:: notification
        :feature-id: 0xF5
        :action-id: 0xEF
        :uuid: Query Response
        :message: WSDK_NotifyCOHNStatus

.. operation:protobuf:: Set COHN Setting
    :operation-id: GPCAMERA_SET_HOME_NETWORK_SETTING
    :external:

    .. operation:protobuf-message:: request
        :feature-id: 0xF1
        :action-id: 0x65
        :uuid: Command
        :message: WSDK_RequestSetCOHNSetting

    .. operation:protobuf-message:: response
        :feature-id: 0xF1
        :action-id: 0xE5
        :uuid: Command Response
        :message: ResponseGeneric
